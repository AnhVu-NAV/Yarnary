import { NextRequest, NextResponse } from "next/server"
import { Resend } from "resend"

export const runtime = "nodejs" // ƒë·ªÉ ch·∫Øc ch·∫Øn kh√¥ng ch·∫°y edge runtime

const resend = new Resend(process.env.RESEND_API_KEY)

export async function POST(request: NextRequest) {
  try {
    const customRequest = await request.json()

    const emailContent = `
      <h2>üé® Y√äU C·∫¶U THI·∫æT K·∫æ T√öI LEN CUSTOM - YARNARY</h2>
      <p><b>Kh√°ch h√†ng:</b> ${customRequest.customerName}</p>
      <p><b>Email:</b> ${customRequest.email}</p>
      <p><b>SƒêT:</b> ${customRequest.phone}</p>
      <h3>Chi ti·∫øt thi·∫øt k·∫ø</h3>
      <ul>
        <li><b>Lo·∫°i t√∫i:</b> ${customRequest.bagType}</li>
        <li><b>K√≠ch th∆∞·ªõc:</b> ${customRequest.size || "Ch∆∞a x√°c ƒë·ªãnh"}</li>
        <li><b>M√†u s·∫Øc:</b> ${customRequest.colors || "Ch∆∞a x√°c ƒë·ªãnh"}</li>
        <li><b>H·ªça ti·∫øt:</b> ${customRequest.pattern || "Ch∆∞a c√≥"}</li>
        <li><b>T√≠nh nƒÉng ƒë·∫∑c bi·ªát:</b> ${customRequest.specialFeatures || "Kh√¥ng c√≥"}</li>
      </ul>
      <h3>Th√¥ng tin b·ªï sung</h3>
      <ul>
        <li><b>Ng√¢n s√°ch:</b> ${customRequest.budget || "Ch∆∞a x√°c ƒë·ªãnh"}</li>
        <li><b>Th·ªùi gian:</b> ${customRequest.timeline || "Linh ho·∫°t"}</li>
        <li><b>Ngu·ªìn c·∫£m h·ª©ng:</b> ${customRequest.inspiration || "Kh√¥ng c√≥"}</li>
        <li><b>Ghi ch√∫:</b> ${customRequest.additionalNotes || "Kh√¥ng c√≥"}</li>
      </ul>
      <p><b>S·ªë ·∫£nh tham kh·∫£o:</b> ${customRequest.images?.length || 0}</p>
      <hr/>
      <small>Y√™u c·∫ßu ƒë∆∞·ª£c g·ª≠i l√∫c: ${new Date().toLocaleString("vi-VN")}</small>
    `

    // g·ª≠i cho team Yarnary
    await resend.emails.send({
      from: "Yarnary Custom <yarnary.custom@resend.dev>",
      to: [process.env.ORDER_TO_EMAIL || "yarnary.shop@gmail.com"],
      subject: `Y√™u c·∫ßu custom m·ªõi t·ª´ ${customRequest.customerName}`,
      html: emailContent,
    })

    // g·ª≠i email x√°c nh·∫≠n cho kh√°ch
    if (customRequest.email) {
      await resend.emails.send({
        from: "Yarnary Custom <custom@yarnary.vn>",
        to: [customRequest.email],
        subject: "‚úÖ X√°c nh·∫≠n y√™u c·∫ßu thi·∫øt k·∫ø t√∫i len custom - Yarnary",
        text: `Ch√†o ${customRequest.customerName},\n\nC·∫£m ∆°n b·∫°n ƒë√£ g·ª≠i y√™u c·∫ßu thi·∫øt k·∫ø t√∫i len custom. ƒê·ªôi ng≈© Yarnary s·∫Ω li√™n h·ªá b·∫°n trong 24h ƒë·ªÉ t∆∞ v·∫•n chi ti·∫øt.\n\nTh√¢n m·∫øn,\nYarnary.vn`,
      })
    }

    return NextResponse.json({ success: true, message: "Custom request sent successfully" })
  } catch (error: any) {
    console.error("Error sending custom request:", error)
    return NextResponse.json(
      { success: false, message: error?.message || "Failed to send custom request" },
      { status: 500 }
    )
  }
}


// import { type NextRequest, NextResponse } from "next/server"

// export async function POST(request: NextRequest) {
//   try {
//     const customRequest = await request.json()

//     // Create email content for custom bag request
//     const emailContent = `
//       Y√äU C·∫¶U THI·∫æT K·∫æ T√öI LEN CUSTOM - YARNARY
      
//       TH√îNG TIN KH√ÅCH H√ÄNG:
//       - H·ªç t√™n: ${customRequest.customerName}
//       - Email: ${customRequest.email}
//       - S·ªë ƒëi·ªán tho·∫°i: ${customRequest.phone}
      
//       CHI TI·∫æT THI·∫æT K·∫æ:
//       - Lo·∫°i t√∫i: ${customRequest.bagType}
//       - K√≠ch th∆∞·ªõc: ${customRequest.size || "Ch∆∞a x√°c ƒë·ªãnh"}
//       - M√†u s·∫Øc: ${customRequest.colors || "Ch∆∞a x√°c ƒë·ªãnh"}
//       - H·ªça ti·∫øt: ${customRequest.pattern || "Ch∆∞a c√≥ y√™u c·∫ßu c·ª• th·ªÉ"}
//       - T√≠nh nƒÉng ƒë·∫∑c bi·ªát: ${customRequest.specialFeatures || "Kh√¥ng c√≥"}
      
//       TH√îNG TIN B·ªî SUNG:
//       - Ng√¢n s√°ch: ${customRequest.budget || "Ch∆∞a x√°c ƒë·ªãnh"}
//       - Th·ªùi gian: ${customRequest.timeline || "Linh ho·∫°t"}
//       - Ngu·ªìn c·∫£m h·ª©ng: ${customRequest.inspiration || "Kh√¥ng c√≥"}
//       - Ghi ch√∫ th√™m: ${customRequest.additionalNotes || "Kh√¥ng c√≥"}
      
//       S·ªê L∆Ø·ª¢NG H√åNH ·∫¢NH THAM KH·∫¢O: ${customRequest.images?.length || 0}
      
//       ---
//       Y√™u c·∫ßu ƒë∆∞·ª£c g·ª≠i l√∫c: ${new Date().toLocaleString("vi-VN")}
      
//       Vui l√≤ng li√™n h·ªá kh√°ch h√†ng trong v√≤ng 24 gi·ªù ƒë·ªÉ t∆∞ v·∫•n chi ti·∫øt.
//     `

//     // Log the custom request (in production, you would send this via email service)
//     console.log("üé® Custom Bag Request:")
//     console.log("Customer:", customRequest.customerName)
//     console.log("Email:", customRequest.email)
//     console.log("Bag Type:", customRequest.bagType)
//     console.log("Full Request:", emailContent)

//     // Simulate email sending delay
//     await new Promise((resolve) => setTimeout(resolve, 1500))

//     // Here you would integrate with your email service
//     // Example with Resend:
//     /*
//     import { Resend } from 'resend'
//     const resend = new Resend(process.env.RESEND_API_KEY)
    
//     await resend.emails.send({
//       from: 'custom@yarnary.com',
//       to: ['design@yarnary.com'],
//       subject: `Y√™u c·∫ßu thi·∫øt k·∫ø custom - ${customRequest.customerName}`,
//       text: emailContent,
//     })
    
//     // Also send confirmation to customer
//     await resend.emails.send({
//       from: 'custom@yarnary.com',
//       to: [customRequest.email],
//       subject: 'X√°c nh·∫≠n y√™u c·∫ßu thi·∫øt k·∫ø t√∫i len custom - Yarnary',
//       text: `Ch√†o ${customRequest.customerName},\n\nC·∫£m ∆°n b·∫°n ƒë√£ g·ª≠i y√™u c·∫ßu thi·∫øt k·∫ø t√∫i len custom. Ch√∫ng t√¥i s·∫Ω li√™n h·ªá v·ªõi b·∫°n trong v√≤ng 24 gi·ªù ƒë·ªÉ t∆∞ v·∫•n chi ti·∫øt.\n\nTr√¢n tr·ªçng,\nƒê·ªôi ng≈© Yarnary`
//     })
//     */

//     return NextResponse.json({
//       success: true,
//       message: "Custom request sent successfully",
//     })
//   } catch (error) {
//     console.error("Error sending custom request:", error)
//     return NextResponse.json({ success: false, message: "Failed to send custom request" }, { status: 500 })
//   }
// }
